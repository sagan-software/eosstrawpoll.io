// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var TypedGlamor = require("bs-typed-glamor/src/TypedGlamor.bs.js");
var Link$ReactTemplate = require("./Link.js");
var PollPage$ReactTemplate = require("./PollPage.js");
var AppStyles$ReactTemplate = require("./Styles/AppStyles.js");
var CommonStyles$ReactTemplate = require("./Styles/CommonStyles.js");

var component = ReasonReact.statelessComponent("PollResultsPage-ReactTemplate");

function renderOption(_, option) {
  return React.createElement("li", undefined, React.createElement("span", undefined, option), React.createElement("span", undefined, "0 Votes"), React.createElement("span", undefined, "0%"));
}

function renderPoll(poll) {
  return React.createElement("div", undefined, React.createElement("h1", undefined, poll.title), React.createElement("ol", undefined, $$Array.map((function (param) {
                        return renderOption(poll, param);
                      }), poll.options)), React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Link$ReactTemplate.make(/* Poll */Block.__(1, [
                            poll.pollCreator,
                            poll.pollId
                          ]), /* None */0, /* array */["Vote"]))));
}

function make(_, accountName, pollId, _$1) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var pollData = PollPage$ReactTemplate.PollData[/* make */7](accountName, pollId, /* () */0);
              return ReasonReact.element(/* None */0, /* None */0, Curry.app(PollPage$ReactTemplate.PollDataQuery[/* make */3], [
                              /* Some */[pollData.variables],
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              /* None */0,
                              (function (param) {
                                  var result = param[/* result */0];
                                  if (typeof result === "number") {
                                    return "Loading...";
                                  } else if (result.tag) {
                                    var match = result[0].poll;
                                    if (match) {
                                      var poll = match[0];
                                      return React.createElement("div", {
                                                  className: TypedGlamor.toString(AppStyles$ReactTemplate.main)
                                                }, React.createElement("h1", {
                                                      className: TypedGlamor.toString(CommonStyles$ReactTemplate.pageHeader)
                                                    }, poll.title), React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Link$ReactTemplate.make(/* PollResults */Block.__(2, [
                                                                poll.pollCreator,
                                                                poll.pollId
                                                              ]), /* None */0, /* array */["Results"]))));
                                    } else {
                                      return "Couldn't find poll";
                                    }
                                  } else {
                                    return result[0].message;
                                  }
                                })
                            ]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.renderOption = renderOption;
exports.renderPoll = renderPoll;
exports.make = make;
/* component Not a pure module */
