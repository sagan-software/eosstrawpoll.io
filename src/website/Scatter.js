// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Js_option = require("bs-platform/lib/js/js_option.js");

function toString(t) {
  if (t >= 783383531) {
    return "https";
  } else {
    return "http";
  }
}

var Protocol = /* module */[/* toString */toString];

function toString$1(t) {
  if (t >= 5048601) {
    return "eth";
  } else {
    return "eos";
  }
}

var Blockchain = /* module */[/* toString */toString$1];

function make(protocol, blockchain, host, port) {
  return {
          protocol: toString(protocol),
          blockchain: toString$1(blockchain),
          host: host,
          port: port
        };
}

var Network = /* module */[/* make */make];

var Account = /* module */[];

var Identity = /* module */[];

function toString$2(t) {
  if (t >= -244359263) {
    if (t >= 351584891) {
      return "firstname";
    } else {
      return "lastname";
    }
  } else if (t >= -271659236) {
    return "email";
  } else {
    return "birthdate";
  }
}

var PersonalField = /* module */[/* toString */toString$2];

function toString$3(t) {
  if (t >= 67859985) {
    if (t >= 487289268) {
      if (t >= 492419670) {
        return "country";
      } else {
        return "address";
      }
    } else if (t >= 190391438) {
      return "zipcode";
    } else {
      return "state";
    }
  } else if (t >= -1040989330) {
    return "phone";
  } else {
    return "city";
  }
}

var LocationField = /* module */[/* toString */toString$3];

function getIdentity(accounts, personal, $$location, _) {
  return scatter.getIdentity({
              accounts: Js_option.getWithDefault(/* array */[], accounts),
              personal: $$Array.map(toString$2, Js_option.getWithDefault(/* array */[], personal)),
              location: $$Array.map(toString$3, Js_option.getWithDefault(/* array */[], $$location))
            });
}

exports.Protocol = Protocol;
exports.Blockchain = Blockchain;
exports.Network = Network;
exports.Account = Account;
exports.Identity = Identity;
exports.PersonalField = PersonalField;
exports.LocationField = LocationField;
exports.getIdentity = getIdentity;
/* No side effect */
