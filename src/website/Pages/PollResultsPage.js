// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Caml_format = require("bs-platform/lib/js/caml_format.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Api$ReactTemplate = require("../Api.js");
var Link$ReactTemplate = require("../Components/Link.js");
var Util$ReactTemplate = require("../Util.js");

function reducer(action, state) {
  return /* Update */Block.__(0, [/* record */[
              /* accountName */state[/* accountName */0],
              /* pollData */action[0]
            ]]);
}

var component = ReasonReact.reducerComponent("PollResultsPage");

var eos = Util$ReactTemplate.loadEosReadOnly(/* () */0);

function renderOption(_, option) {
  return React.createElement("li", undefined, React.createElement("span", undefined, option), React.createElement("span", undefined, "0 Votes"), React.createElement("span", undefined, "0%"));
}

function renderPoll(poll) {
  return React.createElement("div", undefined, React.createElement("h1", undefined, poll[/* title */2]), React.createElement("ol", undefined, $$Array.map((function (param) {
                        return renderOption(poll, param);
                      }), poll[/* options */3])), React.createElement("div", undefined, ReasonReact.element(/* None */0, /* None */0, Link$ReactTemplate.make(/* Poll */Block.__(1, [
                            poll[/* creator */1],
                            String(poll[/* id */0])
                          ]), /* None */0, /* array */["Vote"]))));
}

function make(_, accountName, pollId, _$1) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              Curry._1(self[/* send */3], /* ChangePollData */[/* Loading */1]);
              var id = Caml_format.caml_int_of_string(pollId);
              Api$ReactTemplate.pollById(eos, accountName, id).then((function (result) {
                      var pollData = Api$ReactTemplate.Data[/* fromResult */0](result);
                      Curry._1(self[/* send */3], /* ChangePollData */[pollData]);
                      return Promise.resolve(/* () */0);
                    }));
              return /* () */0;
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* pollData */1];
              if (typeof match === "number") {
                if (match === 0) {
                  return "";
                } else {
                  return "Loading...";
                }
              } else if (match.tag) {
                return match[0];
              } else {
                return renderPoll(match[0]);
              }
            }),
          /* initialState */(function () {
              return /* record */[
                      /* accountName */accountName,
                      /* pollData : NotAsked */0
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */reducer,
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.reducer = reducer;
exports.component = component;
exports.eos = eos;
exports.renderOption = renderOption;
exports.renderPoll = renderPoll;
exports.make = make;
/* component Not a pure module */
