// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Js_exn = require("bs-platform/lib/js/js_exn.js");
var Express = require("bs-express/src/Express.js");
var Process = require("process");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Server = require("react-dom/server");
var App$ReactTemplate = require("../web-client/Components/App.js");

var component = ReasonReact.statelessComponent("FullApp");

function make() {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              return ReasonReact.element(/* None */0, /* None */0, App$ReactTemplate.make(/* array */[]));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var FullApp = /* module */[
  /* component */component,
  /* make */make
];

function make$1(content, title, _) {
  return "<!DOCTYPE html>\n	<html>\n	<head>\n		<title>" + (String(title) + ("</title>\n	</head>\n	<body>\n		<div id=\"app\">" + (String(content) + "</div>\n		<script src=\"/main.bundle.js\"></script>\n	</body>\n	</html>\n")));
}

var Template = /* module */[/* make */make$1];

var app = Express.App[/* make */15](/* () */0);

function renderHTML(_, _$1, res) {
  var content = Server.renderToString(ReasonReact.element(/* None */0, /* None */0, make(/* array */[])));
  return Express.Response[/* sendString */2](make$1(content, "Server Rendering", /* () */0), res);
}

Express.App[/* useOnPath */2](app, "/", Express.Middleware[/* from */5](renderHTML));

function onListen(e) {
  var exit = 0;
  var val;
  try {
    val = e;
    exit = 1;
  }
  catch (raw_exn){
    var exn = Js_exn.internalToOCamlException(raw_exn);
    if (exn[0] === Js_exn.$$Error) {
      console.log(exn[1]);
      Process.exit(1);
      return /* () */0;
    } else {
      throw exn;
    }
  }
  if (exit === 1) {
    console.log("listening at localhost:" + String(3000));
    return /* () */0;
  }
  
}

Express.App[/* listen */19](app, /* Some */[3000], /* Some */[onListen], /* () */0);

var port = 3000;

exports.FullApp = FullApp;
exports.Template = Template;
exports.app = app;
exports.renderHTML = renderHTML;
exports.port = port;
exports.onListen = onListen;
/* component Not a pure module */
