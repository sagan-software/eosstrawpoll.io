// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var WebServerEnv$ReactTemplate = require("../Env/WebServerEnv.js");

function MakeCollection(C) {
  var dbName = C[0];
  var collectionName = C[1];
  var db = function (client) {
    return client.db(dbName);
  };
  var collection = function (client) {
    return client.db(dbName).collection(collectionName);
  };
  var findAll = function (client) {
    return client.db(dbName).collection(collectionName).find();
  };
  var find = function (query, client) {
    return client.db(dbName).collection(collectionName).find(query);
  };
  var channel = "" + (String(dbName) + ("/" + (String(collectionName) + "")));
  var iterator = function (pubsub) {
    return pubsub.asyncIterator(channel);
  };
  var watch = function (mongo, pubsub, toQuery) {
    mongo.db(dbName).collection(collectionName).watch().on("change", (function (change) {
            pubsub.publish(channel, Curry._1(toQuery, change.fullDocument));
            return /* () */0;
          }));
    return /* () */0;
  };
  var save = function (mongo, $$document) {
    return mongo.db(dbName).collection(collectionName).save($$document);
  };
  return /* module */[
          /* dbName */dbName,
          /* collectionName */collectionName,
          /* db */db,
          /* collection */collection,
          /* findAll */findAll,
          /* find */find,
          /* channel */channel,
          /* iterator */iterator,
          /* watch */watch,
          /* save */save
        ];
}

var collectionName = "polls";

function db(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb);
}

function collection(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName);
}

function findAll(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName).find();
}

function find(query, client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName).find(query);
}

var channel = "" + (String(WebServerEnv$ReactTemplate.mongoAppDb) + ("/" + (String(collectionName) + "")));

function iterator(pubsub) {
  return pubsub.asyncIterator(channel);
}

function watch(mongo, pubsub, toQuery) {
  mongo.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName).watch().on("change", (function (change) {
          pubsub.publish(channel, Curry._1(toQuery, change.fullDocument));
          return /* () */0;
        }));
  return /* () */0;
}

function save(mongo, $$document) {
  return mongo.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName).save($$document);
}

var Polls = /* module */[
  /* dbName */WebServerEnv$ReactTemplate.mongoAppDb,
  /* collectionName */collectionName,
  /* db */db,
  /* collection */collection,
  /* findAll */findAll,
  /* find */find,
  /* channel */channel,
  /* iterator */iterator,
  /* watch */watch,
  /* save */save
];

var collectionName$1 = "votes";

function db$1(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb);
}

function collection$1(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$1);
}

function findAll$1(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$1).find();
}

function find$1(query, client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$1).find(query);
}

var channel$1 = "" + (String(WebServerEnv$ReactTemplate.mongoAppDb) + ("/" + (String(collectionName$1) + "")));

function iterator$1(pubsub) {
  return pubsub.asyncIterator(channel$1);
}

function watch$1(mongo, pubsub, toQuery) {
  mongo.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$1).watch().on("change", (function (change) {
          pubsub.publish(channel$1, Curry._1(toQuery, change.fullDocument));
          return /* () */0;
        }));
  return /* () */0;
}

function save$1(mongo, $$document) {
  return mongo.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$1).save($$document);
}

var Votes = /* module */[
  /* dbName */WebServerEnv$ReactTemplate.mongoAppDb,
  /* collectionName */collectionName$1,
  /* db */db$1,
  /* collection */collection$1,
  /* findAll */findAll$1,
  /* find */find$1,
  /* channel */channel$1,
  /* iterator */iterator$1,
  /* watch */watch$1,
  /* save */save$1
];

var collectionName$2 = "comments";

function db$2(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb);
}

function collection$2(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$2);
}

function findAll$2(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$2).find();
}

function find$2(query, client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$2).find(query);
}

var channel$2 = "" + (String(WebServerEnv$ReactTemplate.mongoAppDb) + ("/" + (String(collectionName$2) + "")));

function iterator$2(pubsub) {
  return pubsub.asyncIterator(channel$2);
}

function watch$2(mongo, pubsub, toQuery) {
  mongo.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$2).watch().on("change", (function (change) {
          pubsub.publish(channel$2, Curry._1(toQuery, change.fullDocument));
          return /* () */0;
        }));
  return /* () */0;
}

function save$2(mongo, $$document) {
  return mongo.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$2).save($$document);
}

var Comments = /* module */[
  /* dbName */WebServerEnv$ReactTemplate.mongoAppDb,
  /* collectionName */collectionName$2,
  /* db */db$2,
  /* collection */collection$2,
  /* findAll */findAll$2,
  /* find */find$2,
  /* channel */channel$2,
  /* iterator */iterator$2,
  /* watch */watch$2,
  /* save */save$2
];

var collectionName$3 = "blocks";

function db$3(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb);
}

function collection$3(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$3);
}

function findAll$3(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$3).find();
}

function find$3(query, client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$3).find(query);
}

var channel$3 = "" + (String(WebServerEnv$ReactTemplate.mongoAppDb) + ("/" + (String(collectionName$3) + "")));

function iterator$3(pubsub) {
  return pubsub.asyncIterator(channel$3);
}

function watch$3(mongo, pubsub, toQuery) {
  mongo.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$3).watch().on("change", (function (change) {
          pubsub.publish(channel$3, Curry._1(toQuery, change.fullDocument));
          return /* () */0;
        }));
  return /* () */0;
}

function save$3(mongo, $$document) {
  return mongo.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$3).save($$document);
}

var Blocks = /* module */[
  /* dbName */WebServerEnv$ReactTemplate.mongoAppDb,
  /* collectionName */collectionName$3,
  /* db */db$3,
  /* collection */collection$3,
  /* findAll */findAll$3,
  /* find */find$3,
  /* channel */channel$3,
  /* iterator */iterator$3,
  /* watch */watch$3,
  /* save */save$3
];

var collectionName$4 = "settings";

function db$4(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb);
}

function collection$4(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$4);
}

function findAll$4(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$4).find();
}

function find$4(query, client) {
  return client.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$4).find(query);
}

var channel$4 = "" + (String(WebServerEnv$ReactTemplate.mongoAppDb) + ("/" + (String(collectionName$4) + "")));

function iterator$4(pubsub) {
  return pubsub.asyncIterator(channel$4);
}

function watch$4(mongo, pubsub, toQuery) {
  mongo.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$4).watch().on("change", (function (change) {
          pubsub.publish(channel$4, Curry._1(toQuery, change.fullDocument));
          return /* () */0;
        }));
  return /* () */0;
}

function save$4(mongo, $$document) {
  return mongo.db(WebServerEnv$ReactTemplate.mongoAppDb).collection(collectionName$4).save($$document);
}

var Settings = /* module */[
  /* dbName */WebServerEnv$ReactTemplate.mongoAppDb,
  /* collectionName */collectionName$4,
  /* db */db$4,
  /* collection */collection$4,
  /* findAll */findAll$4,
  /* find */find$4,
  /* channel */channel$4,
  /* iterator */iterator$4,
  /* watch */watch$4,
  /* save */save$4
];

var collectionName$5 = "actions";

function db$5(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoEosDb);
}

function collection$5(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoEosDb).collection(collectionName$5);
}

function findAll$5(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoEosDb).collection(collectionName$5).find();
}

function find$5(query, client) {
  return client.db(WebServerEnv$ReactTemplate.mongoEosDb).collection(collectionName$5).find(query);
}

var channel$5 = "" + (String(WebServerEnv$ReactTemplate.mongoEosDb) + ("/" + (String(collectionName$5) + "")));

function iterator$5(pubsub) {
  return pubsub.asyncIterator(channel$5);
}

function watch$5(mongo, pubsub, toQuery) {
  mongo.db(WebServerEnv$ReactTemplate.mongoEosDb).collection(collectionName$5).watch().on("change", (function (change) {
          pubsub.publish(channel$5, Curry._1(toQuery, change.fullDocument));
          return /* () */0;
        }));
  return /* () */0;
}

function save$5(mongo, $$document) {
  return mongo.db(WebServerEnv$ReactTemplate.mongoEosDb).collection(collectionName$5).save($$document);
}

var Actions = /* module */[
  /* dbName */WebServerEnv$ReactTemplate.mongoEosDb,
  /* collectionName */collectionName$5,
  /* db */db$5,
  /* collection */collection$5,
  /* findAll */findAll$5,
  /* find */find$5,
  /* channel */channel$5,
  /* iterator */iterator$5,
  /* watch */watch$5,
  /* save */save$5
];

var collectionName$6 = "blocks";

function db$6(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoEosDb);
}

function collection$6(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoEosDb).collection(collectionName$6);
}

function findAll$6(client) {
  return client.db(WebServerEnv$ReactTemplate.mongoEosDb).collection(collectionName$6).find();
}

function find$6(query, client) {
  return client.db(WebServerEnv$ReactTemplate.mongoEosDb).collection(collectionName$6).find(query);
}

var channel$6 = "" + (String(WebServerEnv$ReactTemplate.mongoEosDb) + ("/" + (String(collectionName$6) + "")));

function iterator$6(pubsub) {
  return pubsub.asyncIterator(channel$6);
}

function watch$6(mongo, pubsub, toQuery) {
  mongo.db(WebServerEnv$ReactTemplate.mongoEosDb).collection(collectionName$6).watch().on("change", (function (change) {
          pubsub.publish(channel$6, Curry._1(toQuery, change.fullDocument));
          return /* () */0;
        }));
  return /* () */0;
}

function save$6(mongo, $$document) {
  return mongo.db(WebServerEnv$ReactTemplate.mongoEosDb).collection(collectionName$6).save($$document);
}

var Blocks$1 = /* module */[
  /* dbName */WebServerEnv$ReactTemplate.mongoEosDb,
  /* collectionName */collectionName$6,
  /* db */db$6,
  /* collection */collection$6,
  /* findAll */findAll$6,
  /* find */find$6,
  /* channel */channel$6,
  /* iterator */iterator$6,
  /* watch */watch$6,
  /* save */save$6
];

var Eos = /* module */[
  /* Actions */Actions,
  /* Blocks */Blocks$1
];

exports.MakeCollection = MakeCollection;
exports.Polls = Polls;
exports.Votes = Votes;
exports.Comments = Comments;
exports.Blocks = Blocks;
exports.Settings = Settings;
exports.Eos = Eos;
/* channel Not a pure module */
