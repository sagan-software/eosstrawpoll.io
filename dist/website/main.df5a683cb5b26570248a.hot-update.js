webpackHotUpdate("main",{

/***/ "./src/website/Pages/HomePage.js":
/*!***************************************!*\
  !*** ./src/website/Pages/HomePage.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE


var Belt = __webpack_require__(/*! bs-platform/lib/js/belt.js */ "./node_modules/bs-platform/lib/js/belt.js");
var Block = __webpack_require__(/*! bs-platform/lib/js/block.js */ "./node_modules/bs-platform/lib/js/block.js");
var Curry = __webpack_require__(/*! bs-platform/lib/js/curry.js */ "./node_modules/bs-platform/lib/js/curry.js");
var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");
var Belt_Array = __webpack_require__(/*! bs-platform/lib/js/belt_Array.js */ "./node_modules/bs-platform/lib/js/belt_Array.js");
var Belt_Option = __webpack_require__(/*! bs-platform/lib/js/belt_Option.js */ "./node_modules/bs-platform/lib/js/belt_Option.js");
var Caml_format = __webpack_require__(/*! bs-platform/lib/js/caml_format.js */ "./node_modules/bs-platform/lib/js/caml_format.js");
var ReasonReact = __webpack_require__(/*! reason-react/src/ReasonReact.js */ "./node_modules/reason-react/src/ReasonReact.js");
var TypedGlamor = __webpack_require__(/*! bs-typed-glamor/src/TypedGlamor.bs.js */ "./node_modules/bs-typed-glamor/src/TypedGlamor.bs.js");
var Api$ReactTemplate = __webpack_require__(/*! ../Api.js */ "./src/website/Api.js");
var Env$ReactTemplate = __webpack_require__(/*! ../Env.js */ "./src/website/Env.js");
var Link$ReactTemplate = __webpack_require__(/*! ../Components/Link.js */ "./src/website/Components/Link.js");
var Util$ReactTemplate = __webpack_require__(/*! ../Util.js */ "./src/website/Util.js");
var Helmet$ReactTemplate = __webpack_require__(/*! ../External/Helmet.js */ "./src/website/External/Helmet.js");
var HomePageStyles$ReactTemplate = __webpack_require__(/*! ../Styles/HomePageStyles.js */ "./src/website/Styles/HomePageStyles.js");

function nameToString(name) {
  if (name >= 272307608) {
    if (name >= 473709981) {
      if (name >= 697659271) {
        return "whitelist";
      } else {
        return "blacklist";
      }
    } else if (name >= 382421989) {
      return "close_time";
    } else {
      return "title";
    }
  } else if (name !== 78198800) {
    if (name >= 167015550) {
      return "min_num_choices";
    } else {
      return "open_time";
    }
  } else {
    return "max_num_choices";
  }
}

function setTitle(inputs, value) {
  return /* record */[
          /* title */value,
          /* minNumChoices */inputs[/* minNumChoices */1],
          /* maxNumChoices */inputs[/* maxNumChoices */2],
          /* openTime */inputs[/* openTime */3],
          /* closeTime */inputs[/* closeTime */4],
          /* whitelist */inputs[/* whitelist */5],
          /* blacklist */inputs[/* blacklist */6]
        ];
}

function getTitle(state) {
  return state[/* title */0];
}

function setMinNumChoices(inputs, value) {
  var minNumChoices = Caml_format.caml_int_of_string(value);
  var maxNumChoices = Caml_format.caml_int_of_string(value);
  return /* record */[
          /* title */inputs[/* title */0],
          /* minNumChoices */minNumChoices,
          /* maxNumChoices */maxNumChoices,
          /* openTime */inputs[/* openTime */3],
          /* closeTime */inputs[/* closeTime */4],
          /* whitelist */inputs[/* whitelist */5],
          /* blacklist */inputs[/* blacklist */6]
        ];
}

function getMinNumChoices(state) {
  return String(state[/* minNumChoices */1]);
}

function setMaxNumChoices(inputs, value) {
  var minNumChoices = Caml_format.caml_int_of_string(value);
  var maxNumChoices = Caml_format.caml_int_of_string(value);
  return /* record */[
          /* title */inputs[/* title */0],
          /* minNumChoices */minNumChoices,
          /* maxNumChoices */maxNumChoices,
          /* openTime */inputs[/* openTime */3],
          /* closeTime */inputs[/* closeTime */4],
          /* whitelist */inputs[/* whitelist */5],
          /* blacklist */inputs[/* blacklist */6]
        ];
}

function getMaxNumChoices(state) {
  return String(state[/* maxNumChoices */2]);
}

function setOpenTime(inputs, value) {
  var openTime = /* Some */[new Date(value)];
  return /* record */[
          /* title */inputs[/* title */0],
          /* minNumChoices */inputs[/* minNumChoices */1],
          /* maxNumChoices */inputs[/* maxNumChoices */2],
          /* openTime */openTime,
          /* closeTime */inputs[/* closeTime */4],
          /* whitelist */inputs[/* whitelist */5],
          /* blacklist */inputs[/* blacklist */6]
        ];
}

function getOpenTime(state) {
  return Belt_Option.mapWithDefault(state[/* openTime */3], "", (function (prim) {
                return prim.toISOString();
              }));
}

function setCloseTime(inputs, value) {
  var closeTime = /* Some */[new Date(value)];
  return /* record */[
          /* title */inputs[/* title */0],
          /* minNumChoices */inputs[/* minNumChoices */1],
          /* maxNumChoices */inputs[/* maxNumChoices */2],
          /* openTime */inputs[/* openTime */3],
          /* closeTime */closeTime,
          /* whitelist */inputs[/* whitelist */5],
          /* blacklist */inputs[/* blacklist */6]
        ];
}

function getCloseTime(inputs) {
  return Belt_Option.mapWithDefault(inputs[/* closeTime */4], "", (function (prim) {
                return prim.toISOString();
              }));
}

function setWhitelist(inputs, value) {
  var whitelist = value.split(",");
  return /* record */[
          /* title */inputs[/* title */0],
          /* minNumChoices */inputs[/* minNumChoices */1],
          /* maxNumChoices */inputs[/* maxNumChoices */2],
          /* openTime */inputs[/* openTime */3],
          /* closeTime */inputs[/* closeTime */4],
          /* whitelist */whitelist,
          /* blacklist */inputs[/* blacklist */6]
        ];
}

function getWhitelist(inputs) {
  return inputs[/* whitelist */5].join(", ");
}

function setBlacklist(inputs, value) {
  var blacklist = value.split(",");
  return /* record */[
          /* title */inputs[/* title */0],
          /* minNumChoices */inputs[/* minNumChoices */1],
          /* maxNumChoices */inputs[/* maxNumChoices */2],
          /* openTime */inputs[/* openTime */3],
          /* closeTime */inputs[/* closeTime */4],
          /* whitelist */inputs[/* whitelist */5],
          /* blacklist */blacklist
        ];
}

function getBlacklist(inputs) {
  return inputs[/* blacklist */6].join(", ");
}

function getInputValue(inputs, name) {
  if (name >= 272307608) {
    if (name >= 473709981) {
      if (name >= 697659271) {
        return inputs[/* whitelist */5].join(", ");
      } else {
        return inputs[/* blacklist */6].join(", ");
      }
    } else if (name >= 382421989) {
      return getCloseTime(inputs);
    } else {
      return inputs[/* title */0];
    }
  } else if (name !== 78198800) {
    if (name >= 167015550) {
      return String(inputs[/* minNumChoices */1]);
    } else {
      return getOpenTime(inputs);
    }
  } else {
    return String(inputs[/* maxNumChoices */2]);
  }
}

function setInputValue(inputs, name, value) {
  if (name >= 272307608) {
    if (name >= 473709981) {
      if (name >= 697659271) {
        return setWhitelist(inputs, value);
      } else {
        return setBlacklist(inputs, value);
      }
    } else if (name >= 382421989) {
      return setCloseTime(inputs, value);
    } else {
      return setTitle(inputs, value);
    }
  } else if (name !== 78198800) {
    if (name >= 167015550) {
      return setMinNumChoices(inputs, value);
    } else {
      return setOpenTime(inputs, value);
    }
  } else {
    return setMaxNumChoices(inputs, value);
  }
}

function reducer(action, state) {
  if (typeof action === "number") {
    return /* Update */Block.__(0, [/* record */[
                /* inputs */state[/* inputs */0],
                /* inputErrors */state[/* inputErrors */1],
                /* options */state[/* options */2],
                /* optionErrors */state[/* optionErrors */3],
                /* showAdvanced */!state[/* showAdvanced */4],
                /* recentPolls */state[/* recentPolls */5],
                /* popularPolls */state[/* popularPolls */6],
                /* recentVotes */state[/* recentVotes */7]
              ]]);
  } else {
    switch (action.tag | 0) {
      case 0 : 
          return /* Update */Block.__(0, [/* record */[
                      /* inputs */action[0],
                      /* inputErrors */state[/* inputErrors */1],
                      /* options */state[/* options */2],
                      /* optionErrors */state[/* optionErrors */3],
                      /* showAdvanced */state[/* showAdvanced */4],
                      /* recentPolls */state[/* recentPolls */5],
                      /* popularPolls */state[/* popularPolls */6],
                      /* recentVotes */state[/* recentVotes */7]
                    ]]);
      case 1 : 
          Belt_Array.set(state[/* options */2], action[0], action[1]);
          return /* Update */Block.__(0, [state]);
      case 2 : 
          return /* Update */Block.__(0, [state]);
      case 3 : 
          return /* Update */Block.__(0, [/* record */[
                      /* inputs */state[/* inputs */0],
                      /* inputErrors */state[/* inputErrors */1],
                      /* options */state[/* options */2],
                      /* optionErrors */state[/* optionErrors */3],
                      /* showAdvanced */state[/* showAdvanced */4],
                      /* recentPolls */action[0],
                      /* popularPolls */state[/* popularPolls */6],
                      /* recentVotes */state[/* recentVotes */7]
                    ]]);
      case 4 : 
          return /* Update */Block.__(0, [/* record */[
                      /* inputs */state[/* inputs */0],
                      /* inputErrors */state[/* inputErrors */1],
                      /* options */state[/* options */2],
                      /* optionErrors */state[/* optionErrors */3],
                      /* showAdvanced */state[/* showAdvanced */4],
                      /* recentPolls */state[/* recentPolls */5],
                      /* popularPolls */action[0],
                      /* recentVotes */state[/* recentVotes */7]
                    ]]);
      case 5 : 
          return /* Update */Block.__(0, [/* record */[
                      /* inputs */state[/* inputs */0],
                      /* inputErrors */state[/* inputErrors */1],
                      /* options */state[/* options */2],
                      /* optionErrors */state[/* optionErrors */3],
                      /* showAdvanced */state[/* showAdvanced */4],
                      /* recentPolls */state[/* recentPolls */5],
                      /* popularPolls */state[/* popularPolls */6],
                      /* recentVotes */action[0]
                    ]]);
      
    }
  }
}

function onInputChange(self, name, $$event) {
  var obj = $$event.target;
  var value = obj.value;
  var inputs = setInputValue(self[/* state */1][/* inputs */0], name, value);
  return Curry._1(self[/* send */3], /* SetInputs */Block.__(0, [inputs]));
}

var component = ReasonReact.reducerComponent("HomePage");

var eos = Util$ReactTemplate.loadEosReadOnly(/* () */0);

function make(context, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              Promise.all(/* tuple */[
                      Api$ReactTemplate.pollRefs(eos, Env$ReactTemplate.codeName, "recentpolls", /* None */0, /* None */0, /* None */0, /* () */0),
                      Api$ReactTemplate.pollRefs(eos, Env$ReactTemplate.codeName, "popularpolls", /* None */0, /* None */0, /* None */0, /* () */0),
                      Api$ReactTemplate.voteRefs(eos, Env$ReactTemplate.codeName, "recentvotes", /* None */0, /* None */0, /* None */0, /* () */0)
                    ]).then((function (param) {
                      Curry._1(self[/* send */3], /* ChangeRecentPolls */Block.__(3, [Api$ReactTemplate.Data[/* fromResult */0](param[0])]));
                      Curry._1(self[/* send */3], /* ChangePopularPolls */Block.__(4, [Api$ReactTemplate.Data[/* fromResult */0](param[1])]));
                      Curry._1(self[/* send */3], /* ChangeRecentVotes */Block.__(5, [Api$ReactTemplate.Data[/* fromResult */0](param[2])]));
                      return Promise.resolve(/* () */0);
                    }));
              return /* () */0;
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* showAdvanced */4];
              var match$1 = self[/* state */1][/* popularPolls */6];
              var tmp;
              tmp = typeof match$1 === "number" ? (
                  match$1 === 0 ? "" : "Loading..."
                ) : (
                  match$1.tag ? "Failed to load" : React.createElement("ul", undefined, Belt_Array.map(match$1[0], (function (p) {
                                return React.createElement("li", {
                                            key: "" + (String(p) + (".creator_" + (String(p) + ".id")))
                                          }, ReasonReact.element(/* None */0, /* None */0, Link$ReactTemplate.make(/* Poll */Block.__(1, [
                                                      p[/* pollCreator */2],
                                                      String(p[/* pollId */1])
                                                    ]), /* None */0, /* array */[p[/* title */3]])));
                              })))
                );
              var match$2 = self[/* state */1][/* recentPolls */5];
              var tmp$1;
              tmp$1 = typeof match$2 === "number" ? (
                  match$2 === 0 ? "" : "Loading..."
                ) : (
                  match$2.tag ? "Failed to load" : React.createElement("ul", undefined, Belt_Array.map(match$2[0], (function (p) {
                                return React.createElement("li", {
                                            key: "" + (String(p) + (".creator_" + (String(p) + ".id")))
                                          }, ReasonReact.element(/* None */0, /* None */0, Link$ReactTemplate.make(/* Poll */Block.__(1, [
                                                      p[/* pollCreator */2],
                                                      String(p[/* pollId */1])
                                                    ]), /* None */0, /* array */[p[/* title */3]])));
                              })))
                );
              var match$3 = self[/* state */1][/* recentVotes */7];
              var tmp$2;
              tmp$2 = typeof match$3 === "number" ? (
                  match$3 === 0 ? "" : "Loading..."
                ) : (
                  match$3.tag ? "Failed to load" : React.createElement("ul", undefined, Belt_Array.map(match$3[0], (function (v) {
                                return React.createElement("li", {
                                            key: "" + (String(v) + (".pollCreator_" + (String(v) + (".pollId_" + (String(v) + ".voter")))))
                                          }, v[/* voter */4], " voted on ", ReasonReact.element(/* None */0, /* None */0, Link$ReactTemplate.make(/* Poll */Block.__(1, [
                                                      v[/* pollCreator */2],
                                                      String(v[/* pollId */1])
                                                    ]), /* None */0, /* array */[v[/* pollTitle */3]])));
                              })))
                );
              return React.createElement("main", {
                          className: TypedGlamor.toString(HomePageStyles$ReactTemplate.main)
                        }, ReasonReact.element(/* None */0, /* None */0, Helmet$ReactTemplate.make(/* array */[
                                  React.createElement("title", undefined, "Home page"),
                                  React.createElement("meta", {
                                        content: "EOS Straw Poll",
                                        property: "og:title"
                                      }),
                                  React.createElement("meta", {
                                        content: "Home page!!!",
                                        property: "og:description"
                                      })
                                ])), React.createElement("form", {
                              className: TypedGlamor.toString(HomePageStyles$ReactTemplate.form)
                            }, React.createElement("h1", undefined, "Create a poll"), React.createElement("label", undefined, React.createElement("input", {
                                      placeholder: "Type your question here",
                                      required: true,
                                      value: getInputValue(self[/* state */1][/* inputs */0], /* title */272307608),
                                      onChange: (function (param) {
                                          return onInputChange(self, /* title */272307608, param);
                                        })
                                    })), React.createElement("fieldset", {
                                  className: TypedGlamor.toString(HomePageStyles$ReactTemplate.optionList)
                                }, React.createElement("legend", undefined, "Options"), React.createElement("label", {
                                      className: TypedGlamor.toString(HomePageStyles$ReactTemplate.option)
                                    }, React.createElement("input", {
                                          className: TypedGlamor.toString(HomePageStyles$ReactTemplate.optionInput),
                                          placeholder: "Enter poll option",
                                          required: true
                                        })), React.createElement("label", undefined, React.createElement("input", {
                                          placeholder: "Enter poll option",
                                          required: true
                                        })), React.createElement("label", undefined, React.createElement("input", {
                                          placeholder: "Enter poll option"
                                        }))), React.createElement("fieldset", undefined, React.createElement("legend", {
                                      onClick: (function () {
                                          return Curry._1(self[/* send */3], /* ToggleAdvanced */0);
                                        })
                                    }, "Advanced"), match ? React.createElement("div", undefined, React.createElement("label", undefined, "Min choices", React.createElement("input", {
                                                max: String(self[/* state */1][/* options */2].length),
                                                min: 1,
                                                type: "number",
                                                value: getInputValue(self[/* state */1][/* inputs */0], /* minNumChoices */167015550),
                                                onChange: (function (param) {
                                                    return onInputChange(self, /* minNumChoices */167015550, param);
                                                  })
                                              })), React.createElement("label", undefined, "Max choices", React.createElement("input", {
                                                max: String(self[/* state */1][/* options */2].length),
                                                min: 1,
                                                type: "number",
                                                value: getInputValue(self[/* state */1][/* inputs */0], /* maxNumChoices */78198800),
                                                onChange: (function (param) {
                                                    return onInputChange(self, /* maxNumChoices */78198800, param);
                                                  })
                                              })), React.createElement("label", undefined, "Open time", React.createElement("input", {
                                                type: "datetime-local",
                                                value: getInputValue(self[/* state */1][/* inputs */0], /* openTime */-298276617),
                                                onChange: (function (param) {
                                                    return onInputChange(self, /* openTime */-298276617, param);
                                                  })
                                              })), React.createElement("label", undefined, "Close time", React.createElement("input", {
                                                type: "datetime-local",
                                                value: getInputValue(self[/* state */1][/* inputs */0], /* closeTime */382421989),
                                                onChange: (function (param) {
                                                    return onInputChange(self, /* closeTime */382421989, param);
                                                  })
                                              })), React.createElement("label", undefined, "Whitelist", React.createElement("input", {
                                                pattern: "([\\w+]{1,12}(\\.\\w+)?)(,\\s*([\\w+]{1,12}(\\.\\w+)?))*",
                                                placeholder: "alice, bob, janice",
                                                value: getInputValue(self[/* state */1][/* inputs */0], /* whitelist */697659271),
                                                onChange: (function (param) {
                                                    return onInputChange(self, /* whitelist */697659271, param);
                                                  })
                                              })), React.createElement("label", undefined, "Blacklist", React.createElement("input", {
                                                pattern: "([\\w+]{1,12}(\\.\\w+)?)(,\\s*([\\w+]{1,12}(\\.\\w+)?))*",
                                                placeholder: "carol, jim, dan",
                                                value: getInputValue(self[/* state */1][/* inputs */0], /* blacklist */473709981),
                                                onChange: (function (param) {
                                                    return onInputChange(self, /* blacklist */473709981, param);
                                                  })
                                              }))) : React.createElement("div", undefined)), React.createElement("button", {
                                  type: "reset"
                                }, "Reset"), React.createElement("button", {
                                  disabled: context[/* scatter */0] === /* None */0,
                                  type: "submit"
                                }, "Create Poll")), React.createElement("aside", {
                              className: TypedGlamor.toString(HomePageStyles$ReactTemplate.sidebar)
                            }, React.createElement("div", {
                                  className: TypedGlamor.toString(HomePageStyles$ReactTemplate.poll)
                                }, React.createElement("h2", {
                                      className: TypedGlamor.toString(HomePageStyles$ReactTemplate.pollTitle)
                                    }, "Popular Polls"), tmp), React.createElement("div", undefined, React.createElement("h2", {
                                      className: TypedGlamor.toString(HomePageStyles$ReactTemplate.pollTitle)
                                    }, "Recent Polls"), tmp$1), React.createElement("div", undefined, React.createElement("h2", {
                                      className: TypedGlamor.toString(HomePageStyles$ReactTemplate.pollTitle)
                                    }, "Recent Votes"), tmp$2)));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* inputs : record */[
                        /* title */"",
                        /* minNumChoices */1,
                        /* maxNumChoices */1,
                        /* openTime : None */0,
                        /* closeTime : None */0,
                        /* whitelist : array */[],
                        /* blacklist : array */[]
                      ],
                      /* inputErrors */{ },
                      /* options : array */[
                        "",
                        ""
                      ],
                      /* optionErrors : array */[],
                      /* showAdvanced */false,
                      /* recentPolls : NotAsked */0,
                      /* popularPolls : NotAsked */0,
                      /* recentVotes : NotAsked */0
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */reducer,
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

var Id = Belt.Id;

var $$Array = Belt.$$Array;

var SortArray = Belt.SortArray;

var MutableQueue = Belt.MutableQueue;

var MutableStack = Belt.MutableStack;

var List = Belt.List;

var Range = Belt.Range;

var $$Set = Belt.$$Set;

var $$Map = Belt.$$Map;

var MutableSet = Belt.MutableSet;

var MutableMap = Belt.MutableMap;

var HashSet = Belt.HashSet;

var HashMap = Belt.HashMap;

var Option = Belt.Option;

var Result = Belt.Result;

var Debug = Belt.Debug;

var Styles = 0;

exports.Id = Id;
exports.$$Array = $$Array;
exports.SortArray = SortArray;
exports.MutableQueue = MutableQueue;
exports.MutableStack = MutableStack;
exports.List = List;
exports.Range = Range;
exports.$$Set = $$Set;
exports.$$Map = $$Map;
exports.MutableSet = MutableSet;
exports.MutableMap = MutableMap;
exports.HashSet = HashSet;
exports.HashMap = HashMap;
exports.Option = Option;
exports.Result = Result;
exports.Debug = Debug;
exports.Styles = Styles;
exports.nameToString = nameToString;
exports.setTitle = setTitle;
exports.getTitle = getTitle;
exports.setMinNumChoices = setMinNumChoices;
exports.getMinNumChoices = getMinNumChoices;
exports.setMaxNumChoices = setMaxNumChoices;
exports.getMaxNumChoices = getMaxNumChoices;
exports.setOpenTime = setOpenTime;
exports.getOpenTime = getOpenTime;
exports.setCloseTime = setCloseTime;
exports.getCloseTime = getCloseTime;
exports.setWhitelist = setWhitelist;
exports.getWhitelist = getWhitelist;
exports.setBlacklist = setBlacklist;
exports.getBlacklist = getBlacklist;
exports.getInputValue = getInputValue;
exports.setInputValue = setInputValue;
exports.reducer = reducer;
exports.onInputChange = onInputChange;
exports.component = component;
exports.eos = eos;
exports.make = make;
/* component Not a pure module */


/***/ })

})
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvd2Vic2l0ZS9QYWdlcy9Ib21lUGFnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQztBQUMzQztBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkNBQTJDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQ0FBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0EsK0JBQStCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QztBQUN2QztBQUNBO0FBQ0E7QUFDQSx1Q0FBdUM7QUFDdkM7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDLHFDQUFxQztBQUNyQztBQUNBLGlDQUFpQztBQUNqQztBQUNBLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQSx5Q0FBeUM7QUFDekM7QUFDQTtBQUNBLHlDQUF5QztBQUN6QztBQUNBLHlDQUF5QztBQUN6QztBQUNBO0FBQ0EseUNBQXlDO0FBQ3pDLHFDQUFxQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRCwrQ0FBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQsK0NBQStDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbURBQW1EO0FBQ25ELCtDQUErQztBQUMvQyxrRUFBa0UsS0FBSyx5QkFBeUIsS0FBSztBQUNyRztBQUNBO0FBQ0E7QUFDQTtBQUNBLG1EQUFtRDtBQUNuRCwrQ0FBK0M7QUFDL0Msa0VBQWtFLEtBQUsseUJBQXlCLEtBQUs7QUFDckc7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtREFBbUQ7QUFDbkQsK0NBQStDO0FBQy9DO0FBQ0EsaUNBQWlDO0FBQ2pDO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQSxpQ0FBaUM7QUFDakM7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQSxxQ0FBcUM7QUFDckMsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsRUFBRTtBQUMxQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJmaWxlIjoibWFpbi5kZjVhNjgzY2I1YjI2NTcwMjQ4YS5ob3QtdXBkYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gR2VuZXJhdGVkIGJ5IEJVQ0tMRVNDUklQVCBWRVJTSU9OIDMuMS41LCBQTEVBU0UgRURJVCBXSVRIIENBUkVcbid1c2Ugc3RyaWN0JztcblxudmFyIEJlbHQgPSByZXF1aXJlKFwiYnMtcGxhdGZvcm0vbGliL2pzL2JlbHQuanNcIik7XG52YXIgQmxvY2sgPSByZXF1aXJlKFwiYnMtcGxhdGZvcm0vbGliL2pzL2Jsb2NrLmpzXCIpO1xudmFyIEN1cnJ5ID0gcmVxdWlyZShcImJzLXBsYXRmb3JtL2xpYi9qcy9jdXJyeS5qc1wiKTtcbnZhciBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbnZhciBCZWx0X0FycmF5ID0gcmVxdWlyZShcImJzLXBsYXRmb3JtL2xpYi9qcy9iZWx0X0FycmF5LmpzXCIpO1xudmFyIEJlbHRfT3B0aW9uID0gcmVxdWlyZShcImJzLXBsYXRmb3JtL2xpYi9qcy9iZWx0X09wdGlvbi5qc1wiKTtcbnZhciBDYW1sX2Zvcm1hdCA9IHJlcXVpcmUoXCJicy1wbGF0Zm9ybS9saWIvanMvY2FtbF9mb3JtYXQuanNcIik7XG52YXIgUmVhc29uUmVhY3QgPSByZXF1aXJlKFwicmVhc29uLXJlYWN0L3NyYy9SZWFzb25SZWFjdC5qc1wiKTtcbnZhciBUeXBlZEdsYW1vciA9IHJlcXVpcmUoXCJicy10eXBlZC1nbGFtb3Ivc3JjL1R5cGVkR2xhbW9yLmJzLmpzXCIpO1xudmFyIEFwaSRSZWFjdFRlbXBsYXRlID0gcmVxdWlyZShcIi4uL0FwaS5qc1wiKTtcbnZhciBFbnYkUmVhY3RUZW1wbGF0ZSA9IHJlcXVpcmUoXCIuLi9FbnYuanNcIik7XG52YXIgTGluayRSZWFjdFRlbXBsYXRlID0gcmVxdWlyZShcIi4uL0NvbXBvbmVudHMvTGluay5qc1wiKTtcbnZhciBVdGlsJFJlYWN0VGVtcGxhdGUgPSByZXF1aXJlKFwiLi4vVXRpbC5qc1wiKTtcbnZhciBIZWxtZXQkUmVhY3RUZW1wbGF0ZSA9IHJlcXVpcmUoXCIuLi9FeHRlcm5hbC9IZWxtZXQuanNcIik7XG52YXIgSG9tZVBhZ2VTdHlsZXMkUmVhY3RUZW1wbGF0ZSA9IHJlcXVpcmUoXCIuLi9TdHlsZXMvSG9tZVBhZ2VTdHlsZXMuanNcIik7XG5cbmZ1bmN0aW9uIG5hbWVUb1N0cmluZyhuYW1lKSB7XG4gIGlmIChuYW1lID49IDI3MjMwNzYwOCkge1xuICAgIGlmIChuYW1lID49IDQ3MzcwOTk4MSkge1xuICAgICAgaWYgKG5hbWUgPj0gNjk3NjU5MjcxKSB7XG4gICAgICAgIHJldHVybiBcIndoaXRlbGlzdFwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIFwiYmxhY2tsaXN0XCI7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChuYW1lID49IDM4MjQyMTk4OSkge1xuICAgICAgcmV0dXJuIFwiY2xvc2VfdGltZVwiO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gXCJ0aXRsZVwiO1xuICAgIH1cbiAgfSBlbHNlIGlmIChuYW1lICE9PSA3ODE5ODgwMCkge1xuICAgIGlmIChuYW1lID49IDE2NzAxNTU1MCkge1xuICAgICAgcmV0dXJuIFwibWluX251bV9jaG9pY2VzXCI7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBcIm9wZW5fdGltZVwiO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gXCJtYXhfbnVtX2Nob2ljZXNcIjtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZXRUaXRsZShpbnB1dHMsIHZhbHVlKSB7XG4gIHJldHVybiAvKiByZWNvcmQgKi9bXG4gICAgICAgICAgLyogdGl0bGUgKi92YWx1ZSxcbiAgICAgICAgICAvKiBtaW5OdW1DaG9pY2VzICovaW5wdXRzWy8qIG1pbk51bUNob2ljZXMgKi8xXSxcbiAgICAgICAgICAvKiBtYXhOdW1DaG9pY2VzICovaW5wdXRzWy8qIG1heE51bUNob2ljZXMgKi8yXSxcbiAgICAgICAgICAvKiBvcGVuVGltZSAqL2lucHV0c1svKiBvcGVuVGltZSAqLzNdLFxuICAgICAgICAgIC8qIGNsb3NlVGltZSAqL2lucHV0c1svKiBjbG9zZVRpbWUgKi80XSxcbiAgICAgICAgICAvKiB3aGl0ZWxpc3QgKi9pbnB1dHNbLyogd2hpdGVsaXN0ICovNV0sXG4gICAgICAgICAgLyogYmxhY2tsaXN0ICovaW5wdXRzWy8qIGJsYWNrbGlzdCAqLzZdXG4gICAgICAgIF07XG59XG5cbmZ1bmN0aW9uIGdldFRpdGxlKHN0YXRlKSB7XG4gIHJldHVybiBzdGF0ZVsvKiB0aXRsZSAqLzBdO1xufVxuXG5mdW5jdGlvbiBzZXRNaW5OdW1DaG9pY2VzKGlucHV0cywgdmFsdWUpIHtcbiAgdmFyIG1pbk51bUNob2ljZXMgPSBDYW1sX2Zvcm1hdC5jYW1sX2ludF9vZl9zdHJpbmcodmFsdWUpO1xuICB2YXIgbWF4TnVtQ2hvaWNlcyA9IENhbWxfZm9ybWF0LmNhbWxfaW50X29mX3N0cmluZyh2YWx1ZSk7XG4gIHJldHVybiAvKiByZWNvcmQgKi9bXG4gICAgICAgICAgLyogdGl0bGUgKi9pbnB1dHNbLyogdGl0bGUgKi8wXSxcbiAgICAgICAgICAvKiBtaW5OdW1DaG9pY2VzICovbWluTnVtQ2hvaWNlcyxcbiAgICAgICAgICAvKiBtYXhOdW1DaG9pY2VzICovbWF4TnVtQ2hvaWNlcyxcbiAgICAgICAgICAvKiBvcGVuVGltZSAqL2lucHV0c1svKiBvcGVuVGltZSAqLzNdLFxuICAgICAgICAgIC8qIGNsb3NlVGltZSAqL2lucHV0c1svKiBjbG9zZVRpbWUgKi80XSxcbiAgICAgICAgICAvKiB3aGl0ZWxpc3QgKi9pbnB1dHNbLyogd2hpdGVsaXN0ICovNV0sXG4gICAgICAgICAgLyogYmxhY2tsaXN0ICovaW5wdXRzWy8qIGJsYWNrbGlzdCAqLzZdXG4gICAgICAgIF07XG59XG5cbmZ1bmN0aW9uIGdldE1pbk51bUNob2ljZXMoc3RhdGUpIHtcbiAgcmV0dXJuIFN0cmluZyhzdGF0ZVsvKiBtaW5OdW1DaG9pY2VzICovMV0pO1xufVxuXG5mdW5jdGlvbiBzZXRNYXhOdW1DaG9pY2VzKGlucHV0cywgdmFsdWUpIHtcbiAgdmFyIG1pbk51bUNob2ljZXMgPSBDYW1sX2Zvcm1hdC5jYW1sX2ludF9vZl9zdHJpbmcodmFsdWUpO1xuICB2YXIgbWF4TnVtQ2hvaWNlcyA9IENhbWxfZm9ybWF0LmNhbWxfaW50X29mX3N0cmluZyh2YWx1ZSk7XG4gIHJldHVybiAvKiByZWNvcmQgKi9bXG4gICAgICAgICAgLyogdGl0bGUgKi9pbnB1dHNbLyogdGl0bGUgKi8wXSxcbiAgICAgICAgICAvKiBtaW5OdW1DaG9pY2VzICovbWluTnVtQ2hvaWNlcyxcbiAgICAgICAgICAvKiBtYXhOdW1DaG9pY2VzICovbWF4TnVtQ2hvaWNlcyxcbiAgICAgICAgICAvKiBvcGVuVGltZSAqL2lucHV0c1svKiBvcGVuVGltZSAqLzNdLFxuICAgICAgICAgIC8qIGNsb3NlVGltZSAqL2lucHV0c1svKiBjbG9zZVRpbWUgKi80XSxcbiAgICAgICAgICAvKiB3aGl0ZWxpc3QgKi9pbnB1dHNbLyogd2hpdGVsaXN0ICovNV0sXG4gICAgICAgICAgLyogYmxhY2tsaXN0ICovaW5wdXRzWy8qIGJsYWNrbGlzdCAqLzZdXG4gICAgICAgIF07XG59XG5cbmZ1bmN0aW9uIGdldE1heE51bUNob2ljZXMoc3RhdGUpIHtcbiAgcmV0dXJuIFN0cmluZyhzdGF0ZVsvKiBtYXhOdW1DaG9pY2VzICovMl0pO1xufVxuXG5mdW5jdGlvbiBzZXRPcGVuVGltZShpbnB1dHMsIHZhbHVlKSB7XG4gIHZhciBvcGVuVGltZSA9IC8qIFNvbWUgKi9bbmV3IERhdGUodmFsdWUpXTtcbiAgcmV0dXJuIC8qIHJlY29yZCAqL1tcbiAgICAgICAgICAvKiB0aXRsZSAqL2lucHV0c1svKiB0aXRsZSAqLzBdLFxuICAgICAgICAgIC8qIG1pbk51bUNob2ljZXMgKi9pbnB1dHNbLyogbWluTnVtQ2hvaWNlcyAqLzFdLFxuICAgICAgICAgIC8qIG1heE51bUNob2ljZXMgKi9pbnB1dHNbLyogbWF4TnVtQ2hvaWNlcyAqLzJdLFxuICAgICAgICAgIC8qIG9wZW5UaW1lICovb3BlblRpbWUsXG4gICAgICAgICAgLyogY2xvc2VUaW1lICovaW5wdXRzWy8qIGNsb3NlVGltZSAqLzRdLFxuICAgICAgICAgIC8qIHdoaXRlbGlzdCAqL2lucHV0c1svKiB3aGl0ZWxpc3QgKi81XSxcbiAgICAgICAgICAvKiBibGFja2xpc3QgKi9pbnB1dHNbLyogYmxhY2tsaXN0ICovNl1cbiAgICAgICAgXTtcbn1cblxuZnVuY3Rpb24gZ2V0T3BlblRpbWUoc3RhdGUpIHtcbiAgcmV0dXJuIEJlbHRfT3B0aW9uLm1hcFdpdGhEZWZhdWx0KHN0YXRlWy8qIG9wZW5UaW1lICovM10sIFwiXCIsIChmdW5jdGlvbiAocHJpbSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBwcmltLnRvSVNPU3RyaW5nKCk7XG4gICAgICAgICAgICAgIH0pKTtcbn1cblxuZnVuY3Rpb24gc2V0Q2xvc2VUaW1lKGlucHV0cywgdmFsdWUpIHtcbiAgdmFyIGNsb3NlVGltZSA9IC8qIFNvbWUgKi9bbmV3IERhdGUodmFsdWUpXTtcbiAgcmV0dXJuIC8qIHJlY29yZCAqL1tcbiAgICAgICAgICAvKiB0aXRsZSAqL2lucHV0c1svKiB0aXRsZSAqLzBdLFxuICAgICAgICAgIC8qIG1pbk51bUNob2ljZXMgKi9pbnB1dHNbLyogbWluTnVtQ2hvaWNlcyAqLzFdLFxuICAgICAgICAgIC8qIG1heE51bUNob2ljZXMgKi9pbnB1dHNbLyogbWF4TnVtQ2hvaWNlcyAqLzJdLFxuICAgICAgICAgIC8qIG9wZW5UaW1lICovaW5wdXRzWy8qIG9wZW5UaW1lICovM10sXG4gICAgICAgICAgLyogY2xvc2VUaW1lICovY2xvc2VUaW1lLFxuICAgICAgICAgIC8qIHdoaXRlbGlzdCAqL2lucHV0c1svKiB3aGl0ZWxpc3QgKi81XSxcbiAgICAgICAgICAvKiBibGFja2xpc3QgKi9pbnB1dHNbLyogYmxhY2tsaXN0ICovNl1cbiAgICAgICAgXTtcbn1cblxuZnVuY3Rpb24gZ2V0Q2xvc2VUaW1lKGlucHV0cykge1xuICByZXR1cm4gQmVsdF9PcHRpb24ubWFwV2l0aERlZmF1bHQoaW5wdXRzWy8qIGNsb3NlVGltZSAqLzRdLCBcIlwiLCAoZnVuY3Rpb24gKHByaW0pIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcHJpbS50b0lTT1N0cmluZygpO1xuICAgICAgICAgICAgICB9KSk7XG59XG5cbmZ1bmN0aW9uIHNldFdoaXRlbGlzdChpbnB1dHMsIHZhbHVlKSB7XG4gIHZhciB3aGl0ZWxpc3QgPSB2YWx1ZS5zcGxpdChcIixcIik7XG4gIHJldHVybiAvKiByZWNvcmQgKi9bXG4gICAgICAgICAgLyogdGl0bGUgKi9pbnB1dHNbLyogdGl0bGUgKi8wXSxcbiAgICAgICAgICAvKiBtaW5OdW1DaG9pY2VzICovaW5wdXRzWy8qIG1pbk51bUNob2ljZXMgKi8xXSxcbiAgICAgICAgICAvKiBtYXhOdW1DaG9pY2VzICovaW5wdXRzWy8qIG1heE51bUNob2ljZXMgKi8yXSxcbiAgICAgICAgICAvKiBvcGVuVGltZSAqL2lucHV0c1svKiBvcGVuVGltZSAqLzNdLFxuICAgICAgICAgIC8qIGNsb3NlVGltZSAqL2lucHV0c1svKiBjbG9zZVRpbWUgKi80XSxcbiAgICAgICAgICAvKiB3aGl0ZWxpc3QgKi93aGl0ZWxpc3QsXG4gICAgICAgICAgLyogYmxhY2tsaXN0ICovaW5wdXRzWy8qIGJsYWNrbGlzdCAqLzZdXG4gICAgICAgIF07XG59XG5cbmZ1bmN0aW9uIGdldFdoaXRlbGlzdChpbnB1dHMpIHtcbiAgcmV0dXJuIGlucHV0c1svKiB3aGl0ZWxpc3QgKi81XS5qb2luKFwiLCBcIik7XG59XG5cbmZ1bmN0aW9uIHNldEJsYWNrbGlzdChpbnB1dHMsIHZhbHVlKSB7XG4gIHZhciBibGFja2xpc3QgPSB2YWx1ZS5zcGxpdChcIixcIik7XG4gIHJldHVybiAvKiByZWNvcmQgKi9bXG4gICAgICAgICAgLyogdGl0bGUgKi9pbnB1dHNbLyogdGl0bGUgKi8wXSxcbiAgICAgICAgICAvKiBtaW5OdW1DaG9pY2VzICovaW5wdXRzWy8qIG1pbk51bUNob2ljZXMgKi8xXSxcbiAgICAgICAgICAvKiBtYXhOdW1DaG9pY2VzICovaW5wdXRzWy8qIG1heE51bUNob2ljZXMgKi8yXSxcbiAgICAgICAgICAvKiBvcGVuVGltZSAqL2lucHV0c1svKiBvcGVuVGltZSAqLzNdLFxuICAgICAgICAgIC8qIGNsb3NlVGltZSAqL2lucHV0c1svKiBjbG9zZVRpbWUgKi80XSxcbiAgICAgICAgICAvKiB3aGl0ZWxpc3QgKi9pbnB1dHNbLyogd2hpdGVsaXN0ICovNV0sXG4gICAgICAgICAgLyogYmxhY2tsaXN0ICovYmxhY2tsaXN0XG4gICAgICAgIF07XG59XG5cbmZ1bmN0aW9uIGdldEJsYWNrbGlzdChpbnB1dHMpIHtcbiAgcmV0dXJuIGlucHV0c1svKiBibGFja2xpc3QgKi82XS5qb2luKFwiLCBcIik7XG59XG5cbmZ1bmN0aW9uIGdldElucHV0VmFsdWUoaW5wdXRzLCBuYW1lKSB7XG4gIGlmIChuYW1lID49IDI3MjMwNzYwOCkge1xuICAgIGlmIChuYW1lID49IDQ3MzcwOTk4MSkge1xuICAgICAgaWYgKG5hbWUgPj0gNjk3NjU5MjcxKSB7XG4gICAgICAgIHJldHVybiBpbnB1dHNbLyogd2hpdGVsaXN0ICovNV0uam9pbihcIiwgXCIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGlucHV0c1svKiBibGFja2xpc3QgKi82XS5qb2luKFwiLCBcIik7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChuYW1lID49IDM4MjQyMTk4OSkge1xuICAgICAgcmV0dXJuIGdldENsb3NlVGltZShpbnB1dHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gaW5wdXRzWy8qIHRpdGxlICovMF07XG4gICAgfVxuICB9IGVsc2UgaWYgKG5hbWUgIT09IDc4MTk4ODAwKSB7XG4gICAgaWYgKG5hbWUgPj0gMTY3MDE1NTUwKSB7XG4gICAgICByZXR1cm4gU3RyaW5nKGlucHV0c1svKiBtaW5OdW1DaG9pY2VzICovMV0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gZ2V0T3BlblRpbWUoaW5wdXRzKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFN0cmluZyhpbnB1dHNbLyogbWF4TnVtQ2hvaWNlcyAqLzJdKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBzZXRJbnB1dFZhbHVlKGlucHV0cywgbmFtZSwgdmFsdWUpIHtcbiAgaWYgKG5hbWUgPj0gMjcyMzA3NjA4KSB7XG4gICAgaWYgKG5hbWUgPj0gNDczNzA5OTgxKSB7XG4gICAgICBpZiAobmFtZSA+PSA2OTc2NTkyNzEpIHtcbiAgICAgICAgcmV0dXJuIHNldFdoaXRlbGlzdChpbnB1dHMsIHZhbHVlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBzZXRCbGFja2xpc3QoaW5wdXRzLCB2YWx1ZSk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChuYW1lID49IDM4MjQyMTk4OSkge1xuICAgICAgcmV0dXJuIHNldENsb3NlVGltZShpbnB1dHMsIHZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHNldFRpdGxlKGlucHV0cywgdmFsdWUpO1xuICAgIH1cbiAgfSBlbHNlIGlmIChuYW1lICE9PSA3ODE5ODgwMCkge1xuICAgIGlmIChuYW1lID49IDE2NzAxNTU1MCkge1xuICAgICAgcmV0dXJuIHNldE1pbk51bUNob2ljZXMoaW5wdXRzLCB2YWx1ZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBzZXRPcGVuVGltZShpbnB1dHMsIHZhbHVlKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHNldE1heE51bUNob2ljZXMoaW5wdXRzLCB2YWx1ZSk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVkdWNlcihhY3Rpb24sIHN0YXRlKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uID09PSBcIm51bWJlclwiKSB7XG4gICAgcmV0dXJuIC8qIFVwZGF0ZSAqL0Jsb2NrLl9fKDAsIFsvKiByZWNvcmQgKi9bXG4gICAgICAgICAgICAgICAgLyogaW5wdXRzICovc3RhdGVbLyogaW5wdXRzICovMF0sXG4gICAgICAgICAgICAgICAgLyogaW5wdXRFcnJvcnMgKi9zdGF0ZVsvKiBpbnB1dEVycm9ycyAqLzFdLFxuICAgICAgICAgICAgICAgIC8qIG9wdGlvbnMgKi9zdGF0ZVsvKiBvcHRpb25zICovMl0sXG4gICAgICAgICAgICAgICAgLyogb3B0aW9uRXJyb3JzICovc3RhdGVbLyogb3B0aW9uRXJyb3JzICovM10sXG4gICAgICAgICAgICAgICAgLyogc2hvd0FkdmFuY2VkICovIXN0YXRlWy8qIHNob3dBZHZhbmNlZCAqLzRdLFxuICAgICAgICAgICAgICAgIC8qIHJlY2VudFBvbGxzICovc3RhdGVbLyogcmVjZW50UG9sbHMgKi81XSxcbiAgICAgICAgICAgICAgICAvKiBwb3B1bGFyUG9sbHMgKi9zdGF0ZVsvKiBwb3B1bGFyUG9sbHMgKi82XSxcbiAgICAgICAgICAgICAgICAvKiByZWNlbnRWb3RlcyAqL3N0YXRlWy8qIHJlY2VudFZvdGVzICovN11cbiAgICAgICAgICAgICAgXV0pO1xuICB9IGVsc2Uge1xuICAgIHN3aXRjaCAoYWN0aW9uLnRhZyB8IDApIHtcbiAgICAgIGNhc2UgMCA6IFxuICAgICAgICAgIHJldHVybiAvKiBVcGRhdGUgKi9CbG9jay5fXygwLCBbLyogcmVjb3JkICovW1xuICAgICAgICAgICAgICAgICAgICAgIC8qIGlucHV0cyAqL2FjdGlvblswXSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiBpbnB1dEVycm9ycyAqL3N0YXRlWy8qIGlucHV0RXJyb3JzICovMV0sXG4gICAgICAgICAgICAgICAgICAgICAgLyogb3B0aW9ucyAqL3N0YXRlWy8qIG9wdGlvbnMgKi8yXSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiBvcHRpb25FcnJvcnMgKi9zdGF0ZVsvKiBvcHRpb25FcnJvcnMgKi8zXSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiBzaG93QWR2YW5jZWQgKi9zdGF0ZVsvKiBzaG93QWR2YW5jZWQgKi80XSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiByZWNlbnRQb2xscyAqL3N0YXRlWy8qIHJlY2VudFBvbGxzICovNV0sXG4gICAgICAgICAgICAgICAgICAgICAgLyogcG9wdWxhclBvbGxzICovc3RhdGVbLyogcG9wdWxhclBvbGxzICovNl0sXG4gICAgICAgICAgICAgICAgICAgICAgLyogcmVjZW50Vm90ZXMgKi9zdGF0ZVsvKiByZWNlbnRWb3RlcyAqLzddXG4gICAgICAgICAgICAgICAgICAgIF1dKTtcbiAgICAgIGNhc2UgMSA6IFxuICAgICAgICAgIEJlbHRfQXJyYXkuc2V0KHN0YXRlWy8qIG9wdGlvbnMgKi8yXSwgYWN0aW9uWzBdLCBhY3Rpb25bMV0pO1xuICAgICAgICAgIHJldHVybiAvKiBVcGRhdGUgKi9CbG9jay5fXygwLCBbc3RhdGVdKTtcbiAgICAgIGNhc2UgMiA6IFxuICAgICAgICAgIHJldHVybiAvKiBVcGRhdGUgKi9CbG9jay5fXygwLCBbc3RhdGVdKTtcbiAgICAgIGNhc2UgMyA6IFxuICAgICAgICAgIHJldHVybiAvKiBVcGRhdGUgKi9CbG9jay5fXygwLCBbLyogcmVjb3JkICovW1xuICAgICAgICAgICAgICAgICAgICAgIC8qIGlucHV0cyAqL3N0YXRlWy8qIGlucHV0cyAqLzBdLFxuICAgICAgICAgICAgICAgICAgICAgIC8qIGlucHV0RXJyb3JzICovc3RhdGVbLyogaW5wdXRFcnJvcnMgKi8xXSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiBvcHRpb25zICovc3RhdGVbLyogb3B0aW9ucyAqLzJdLFxuICAgICAgICAgICAgICAgICAgICAgIC8qIG9wdGlvbkVycm9ycyAqL3N0YXRlWy8qIG9wdGlvbkVycm9ycyAqLzNdLFxuICAgICAgICAgICAgICAgICAgICAgIC8qIHNob3dBZHZhbmNlZCAqL3N0YXRlWy8qIHNob3dBZHZhbmNlZCAqLzRdLFxuICAgICAgICAgICAgICAgICAgICAgIC8qIHJlY2VudFBvbGxzICovYWN0aW9uWzBdLFxuICAgICAgICAgICAgICAgICAgICAgIC8qIHBvcHVsYXJQb2xscyAqL3N0YXRlWy8qIHBvcHVsYXJQb2xscyAqLzZdLFxuICAgICAgICAgICAgICAgICAgICAgIC8qIHJlY2VudFZvdGVzICovc3RhdGVbLyogcmVjZW50Vm90ZXMgKi83XVxuICAgICAgICAgICAgICAgICAgICBdXSk7XG4gICAgICBjYXNlIDQgOiBcbiAgICAgICAgICByZXR1cm4gLyogVXBkYXRlICovQmxvY2suX18oMCwgWy8qIHJlY29yZCAqL1tcbiAgICAgICAgICAgICAgICAgICAgICAvKiBpbnB1dHMgKi9zdGF0ZVsvKiBpbnB1dHMgKi8wXSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiBpbnB1dEVycm9ycyAqL3N0YXRlWy8qIGlucHV0RXJyb3JzICovMV0sXG4gICAgICAgICAgICAgICAgICAgICAgLyogb3B0aW9ucyAqL3N0YXRlWy8qIG9wdGlvbnMgKi8yXSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiBvcHRpb25FcnJvcnMgKi9zdGF0ZVsvKiBvcHRpb25FcnJvcnMgKi8zXSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiBzaG93QWR2YW5jZWQgKi9zdGF0ZVsvKiBzaG93QWR2YW5jZWQgKi80XSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiByZWNlbnRQb2xscyAqL3N0YXRlWy8qIHJlY2VudFBvbGxzICovNV0sXG4gICAgICAgICAgICAgICAgICAgICAgLyogcG9wdWxhclBvbGxzICovYWN0aW9uWzBdLFxuICAgICAgICAgICAgICAgICAgICAgIC8qIHJlY2VudFZvdGVzICovc3RhdGVbLyogcmVjZW50Vm90ZXMgKi83XVxuICAgICAgICAgICAgICAgICAgICBdXSk7XG4gICAgICBjYXNlIDUgOiBcbiAgICAgICAgICByZXR1cm4gLyogVXBkYXRlICovQmxvY2suX18oMCwgWy8qIHJlY29yZCAqL1tcbiAgICAgICAgICAgICAgICAgICAgICAvKiBpbnB1dHMgKi9zdGF0ZVsvKiBpbnB1dHMgKi8wXSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiBpbnB1dEVycm9ycyAqL3N0YXRlWy8qIGlucHV0RXJyb3JzICovMV0sXG4gICAgICAgICAgICAgICAgICAgICAgLyogb3B0aW9ucyAqL3N0YXRlWy8qIG9wdGlvbnMgKi8yXSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiBvcHRpb25FcnJvcnMgKi9zdGF0ZVsvKiBvcHRpb25FcnJvcnMgKi8zXSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiBzaG93QWR2YW5jZWQgKi9zdGF0ZVsvKiBzaG93QWR2YW5jZWQgKi80XSxcbiAgICAgICAgICAgICAgICAgICAgICAvKiByZWNlbnRQb2xscyAqL3N0YXRlWy8qIHJlY2VudFBvbGxzICovNV0sXG4gICAgICAgICAgICAgICAgICAgICAgLyogcG9wdWxhclBvbGxzICovc3RhdGVbLyogcG9wdWxhclBvbGxzICovNl0sXG4gICAgICAgICAgICAgICAgICAgICAgLyogcmVjZW50Vm90ZXMgKi9hY3Rpb25bMF1cbiAgICAgICAgICAgICAgICAgICAgXV0pO1xuICAgICAgXG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIG9uSW5wdXRDaGFuZ2Uoc2VsZiwgbmFtZSwgJCRldmVudCkge1xuICB2YXIgb2JqID0gJCRldmVudC50YXJnZXQ7XG4gIHZhciB2YWx1ZSA9IG9iai52YWx1ZTtcbiAgdmFyIGlucHV0cyA9IHNldElucHV0VmFsdWUoc2VsZlsvKiBzdGF0ZSAqLzFdWy8qIGlucHV0cyAqLzBdLCBuYW1lLCB2YWx1ZSk7XG4gIHJldHVybiBDdXJyeS5fMShzZWxmWy8qIHNlbmQgKi8zXSwgLyogU2V0SW5wdXRzICovQmxvY2suX18oMCwgW2lucHV0c10pKTtcbn1cblxudmFyIGNvbXBvbmVudCA9IFJlYXNvblJlYWN0LnJlZHVjZXJDb21wb25lbnQoXCJIb21lUGFnZVwiKTtcblxudmFyIGVvcyA9IFV0aWwkUmVhY3RUZW1wbGF0ZS5sb2FkRW9zUmVhZE9ubHkoLyogKCkgKi8wKTtcblxuZnVuY3Rpb24gbWFrZShjb250ZXh0LCBfKSB7XG4gIHJldHVybiAvKiByZWNvcmQgKi9bXG4gICAgICAgICAgLyogZGVidWdOYW1lICovY29tcG9uZW50Wy8qIGRlYnVnTmFtZSAqLzBdLFxuICAgICAgICAgIC8qIHJlYWN0Q2xhc3NJbnRlcm5hbCAqL2NvbXBvbmVudFsvKiByZWFjdENsYXNzSW50ZXJuYWwgKi8xXSxcbiAgICAgICAgICAvKiBoYW5kZWRPZmZTdGF0ZSAqL2NvbXBvbmVudFsvKiBoYW5kZWRPZmZTdGF0ZSAqLzJdLFxuICAgICAgICAgIC8qIHdpbGxSZWNlaXZlUHJvcHMgKi9jb21wb25lbnRbLyogd2lsbFJlY2VpdmVQcm9wcyAqLzNdLFxuICAgICAgICAgIC8qIGRpZE1vdW50ICovKGZ1bmN0aW9uIChzZWxmKSB7XG4gICAgICAgICAgICAgIFByb21pc2UuYWxsKC8qIHR1cGxlICovW1xuICAgICAgICAgICAgICAgICAgICAgIEFwaSRSZWFjdFRlbXBsYXRlLnBvbGxSZWZzKGVvcywgRW52JFJlYWN0VGVtcGxhdGUuY29kZU5hbWUsIFwicmVjZW50cG9sbHNcIiwgLyogTm9uZSAqLzAsIC8qIE5vbmUgKi8wLCAvKiBOb25lICovMCwgLyogKCkgKi8wKSxcbiAgICAgICAgICAgICAgICAgICAgICBBcGkkUmVhY3RUZW1wbGF0ZS5wb2xsUmVmcyhlb3MsIEVudiRSZWFjdFRlbXBsYXRlLmNvZGVOYW1lLCBcInBvcHVsYXJwb2xsc1wiLCAvKiBOb25lICovMCwgLyogTm9uZSAqLzAsIC8qIE5vbmUgKi8wLCAvKiAoKSAqLzApLFxuICAgICAgICAgICAgICAgICAgICAgIEFwaSRSZWFjdFRlbXBsYXRlLnZvdGVSZWZzKGVvcywgRW52JFJlYWN0VGVtcGxhdGUuY29kZU5hbWUsIFwicmVjZW50dm90ZXNcIiwgLyogTm9uZSAqLzAsIC8qIE5vbmUgKi8wLCAvKiBOb25lICovMCwgLyogKCkgKi8wKVxuICAgICAgICAgICAgICAgICAgICBdKS50aGVuKChmdW5jdGlvbiAocGFyYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICBDdXJyeS5fMShzZWxmWy8qIHNlbmQgKi8zXSwgLyogQ2hhbmdlUmVjZW50UG9sbHMgKi9CbG9jay5fXygzLCBbQXBpJFJlYWN0VGVtcGxhdGUuRGF0YVsvKiBmcm9tUmVzdWx0ICovMF0ocGFyYW1bMF0pXSkpO1xuICAgICAgICAgICAgICAgICAgICAgIEN1cnJ5Ll8xKHNlbGZbLyogc2VuZCAqLzNdLCAvKiBDaGFuZ2VQb3B1bGFyUG9sbHMgKi9CbG9jay5fXyg0LCBbQXBpJFJlYWN0VGVtcGxhdGUuRGF0YVsvKiBmcm9tUmVzdWx0ICovMF0ocGFyYW1bMV0pXSkpO1xuICAgICAgICAgICAgICAgICAgICAgIEN1cnJ5Ll8xKHNlbGZbLyogc2VuZCAqLzNdLCAvKiBDaGFuZ2VSZWNlbnRWb3RlcyAqL0Jsb2NrLl9fKDUsIFtBcGkkUmVhY3RUZW1wbGF0ZS5EYXRhWy8qIGZyb21SZXN1bHQgKi8wXShwYXJhbVsyXSldKSk7XG4gICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgvKiAoKSAqLzApO1xuICAgICAgICAgICAgICAgICAgICB9KSk7XG4gICAgICAgICAgICAgIHJldHVybiAvKiAoKSAqLzA7XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAvKiBkaWRVcGRhdGUgKi9jb21wb25lbnRbLyogZGlkVXBkYXRlICovNV0sXG4gICAgICAgICAgLyogd2lsbFVubW91bnQgKi9jb21wb25lbnRbLyogd2lsbFVubW91bnQgKi82XSxcbiAgICAgICAgICAvKiB3aWxsVXBkYXRlICovY29tcG9uZW50Wy8qIHdpbGxVcGRhdGUgKi83XSxcbiAgICAgICAgICAvKiBzaG91bGRVcGRhdGUgKi9jb21wb25lbnRbLyogc2hvdWxkVXBkYXRlICovOF0sXG4gICAgICAgICAgLyogcmVuZGVyICovKGZ1bmN0aW9uIChzZWxmKSB7XG4gICAgICAgICAgICAgIHZhciBtYXRjaCA9IHNlbGZbLyogc3RhdGUgKi8xXVsvKiBzaG93QWR2YW5jZWQgKi80XTtcbiAgICAgICAgICAgICAgdmFyIG1hdGNoJDEgPSBzZWxmWy8qIHN0YXRlICovMV1bLyogcG9wdWxhclBvbGxzICovNl07XG4gICAgICAgICAgICAgIHZhciB0bXA7XG4gICAgICAgICAgICAgIHRtcCA9IHR5cGVvZiBtYXRjaCQxID09PSBcIm51bWJlclwiID8gKFxuICAgICAgICAgICAgICAgICAgbWF0Y2gkMSA9PT0gMCA/IFwiXCIgOiBcIkxvYWRpbmcuLi5cIlxuICAgICAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgICBtYXRjaCQxLnRhZyA/IFwiRmFpbGVkIHRvIGxvYWRcIiA6IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCB1bmRlZmluZWQsIEJlbHRfQXJyYXkubWFwKG1hdGNoJDFbMF0sIChmdW5jdGlvbiAocCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5OiBcIlwiICsgKFN0cmluZyhwKSArIChcIi5jcmVhdG9yX1wiICsgKFN0cmluZyhwKSArIFwiLmlkXCIpKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIFJlYXNvblJlYWN0LmVsZW1lbnQoLyogTm9uZSAqLzAsIC8qIE5vbmUgKi8wLCBMaW5rJFJlYWN0VGVtcGxhdGUubWFrZSgvKiBQb2xsICovQmxvY2suX18oMSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcFsvKiBwb2xsQ3JlYXRvciAqLzJdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgU3RyaW5nKHBbLyogcG9sbElkICovMV0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksIC8qIE5vbmUgKi8wLCAvKiBhcnJheSAqL1twWy8qIHRpdGxlICovM11dKSkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpKVxuICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgIHZhciBtYXRjaCQyID0gc2VsZlsvKiBzdGF0ZSAqLzFdWy8qIHJlY2VudFBvbGxzICovNV07XG4gICAgICAgICAgICAgIHZhciB0bXAkMTtcbiAgICAgICAgICAgICAgdG1wJDEgPSB0eXBlb2YgbWF0Y2gkMiA9PT0gXCJudW1iZXJcIiA/IChcbiAgICAgICAgICAgICAgICAgIG1hdGNoJDIgPT09IDAgPyBcIlwiIDogXCJMb2FkaW5nLi4uXCJcbiAgICAgICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgICAgbWF0Y2gkMi50YWcgPyBcIkZhaWxlZCB0byBsb2FkXCIgOiBSZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwgdW5kZWZpbmVkLCBCZWx0X0FycmF5Lm1hcChtYXRjaCQyWzBdLCAoZnVuY3Rpb24gKHApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleTogXCJcIiArIChTdHJpbmcocCkgKyAoXCIuY3JlYXRvcl9cIiArIChTdHJpbmcocCkgKyBcIi5pZFwiKSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBSZWFzb25SZWFjdC5lbGVtZW50KC8qIE5vbmUgKi8wLCAvKiBOb25lICovMCwgTGluayRSZWFjdFRlbXBsYXRlLm1ha2UoLyogUG9sbCAqL0Jsb2NrLl9fKDEsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBbLyogcG9sbENyZWF0b3IgKi8yXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0cmluZyhwWy8qIHBvbGxJZCAqLzFdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLCAvKiBOb25lICovMCwgLyogYXJyYXkgKi9bcFsvKiB0aXRsZSAqLzNdXSkpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKSlcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICB2YXIgbWF0Y2gkMyA9IHNlbGZbLyogc3RhdGUgKi8xXVsvKiByZWNlbnRWb3RlcyAqLzddO1xuICAgICAgICAgICAgICB2YXIgdG1wJDI7XG4gICAgICAgICAgICAgIHRtcCQyID0gdHlwZW9mIG1hdGNoJDMgPT09IFwibnVtYmVyXCIgPyAoXG4gICAgICAgICAgICAgICAgICBtYXRjaCQzID09PSAwID8gXCJcIiA6IFwiTG9hZGluZy4uLlwiXG4gICAgICAgICAgICAgICAgKSA6IChcbiAgICAgICAgICAgICAgICAgIG1hdGNoJDMudGFnID8gXCJGYWlsZWQgdG8gbG9hZFwiIDogUmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIHVuZGVmaW5lZCwgQmVsdF9BcnJheS5tYXAobWF0Y2gkM1swXSwgKGZ1bmN0aW9uICh2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IFwiXCIgKyAoU3RyaW5nKHYpICsgKFwiLnBvbGxDcmVhdG9yX1wiICsgKFN0cmluZyh2KSArIChcIi5wb2xsSWRfXCIgKyAoU3RyaW5nKHYpICsgXCIudm90ZXJcIikpKSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCB2Wy8qIHZvdGVyICovNF0sIFwiIHZvdGVkIG9uIFwiLCBSZWFzb25SZWFjdC5lbGVtZW50KC8qIE5vbmUgKi8wLCAvKiBOb25lICovMCwgTGluayRSZWFjdFRlbXBsYXRlLm1ha2UoLyogUG9sbCAqL0Jsb2NrLl9fKDEsIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZbLyogcG9sbENyZWF0b3IgKi8yXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFN0cmluZyh2Wy8qIHBvbGxJZCAqLzFdKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLCAvKiBOb25lICovMCwgLyogYXJyYXkgKi9bdlsvKiBwb2xsVGl0bGUgKi8zXV0pKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSkpXG4gICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJtYWluXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBUeXBlZEdsYW1vci50b1N0cmluZyhIb21lUGFnZVN0eWxlcyRSZWFjdFRlbXBsYXRlLm1haW4pXG4gICAgICAgICAgICAgICAgICAgICAgICB9LCBSZWFzb25SZWFjdC5lbGVtZW50KC8qIE5vbmUgKi8wLCAvKiBOb25lICovMCwgSGVsbWV0JFJlYWN0VGVtcGxhdGUubWFrZSgvKiBhcnJheSAqL1tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIiwgdW5kZWZpbmVkLCBcIkhvbWUgcGFnZVwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibWV0YVwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udGVudDogXCJFT1MgU3RyYXcgUG9sbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3BlcnR5OiBcIm9nOnRpdGxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm1ldGFcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiSG9tZSBwYWdlISEhXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvcGVydHk6IFwib2c6ZGVzY3JpcHRpb25cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogVHlwZWRHbGFtb3IudG9TdHJpbmcoSG9tZVBhZ2VTdHlsZXMkUmVhY3RUZW1wbGF0ZS5mb3JtKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCB1bmRlZmluZWQsIFwiQ3JlYXRlIGEgcG9sbFwiKSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHVuZGVmaW5lZCwgUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiVHlwZSB5b3VyIHF1ZXN0aW9uIGhlcmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBnZXRJbnB1dFZhbHVlKHNlbGZbLyogc3RhdGUgKi8xXVsvKiBpbnB1dHMgKi8wXSwgLyogdGl0bGUgKi8yNzIzMDc2MDgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogKGZ1bmN0aW9uIChwYXJhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG9uSW5wdXRDaGFuZ2Uoc2VsZiwgLyogdGl0bGUgKi8yNzIzMDc2MDgsIHBhcmFtKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZmllbGRzZXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogVHlwZWRHbGFtb3IudG9TdHJpbmcoSG9tZVBhZ2VTdHlsZXMkUmVhY3RUZW1wbGF0ZS5vcHRpb25MaXN0KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGVnZW5kXCIsIHVuZGVmaW5lZCwgXCJPcHRpb25zXCIpLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFR5cGVkR2xhbW9yLnRvU3RyaW5nKEhvbWVQYWdlU3R5bGVzJFJlYWN0VGVtcGxhdGUub3B0aW9uKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogVHlwZWRHbGFtb3IudG9TdHJpbmcoSG9tZVBhZ2VTdHlsZXMkUmVhY3RUZW1wbGF0ZS5vcHRpb25JbnB1dCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJFbnRlciBwb2xsIG9wdGlvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB1bmRlZmluZWQsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJFbnRlciBwb2xsIG9wdGlvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB1bmRlZmluZWQsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogXCJFbnRlciBwb2xsIG9wdGlvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpKSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIsIHVuZGVmaW5lZCwgUmVhY3QuY3JlYXRlRWxlbWVudChcImxlZ2VuZFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s6IChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gQ3VycnkuXzEoc2VsZlsvKiBzZW5kICovM10sIC8qIFRvZ2dsZUFkdmFuY2VkICovMCk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIFwiQWR2YW5jZWRcIiksIG1hdGNoID8gUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB1bmRlZmluZWQsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB1bmRlZmluZWQsIFwiTWluIGNob2ljZXNcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heDogU3RyaW5nKHNlbGZbLyogc3RhdGUgKi8xXVsvKiBvcHRpb25zICovMl0ubGVuZ3RoKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbjogMSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZ2V0SW5wdXRWYWx1ZShzZWxmWy8qIHN0YXRlICovMV1bLyogaW5wdXRzICovMF0sIC8qIG1pbk51bUNob2ljZXMgKi8xNjcwMTU1NTApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IChmdW5jdGlvbiAocGFyYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb25JbnB1dENoYW5nZShzZWxmLCAvKiBtaW5OdW1DaG9pY2VzICovMTY3MDE1NTUwLCBwYXJhbSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkpLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwgdW5kZWZpbmVkLCBcIk1heCBjaG9pY2VzXCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXg6IFN0cmluZyhzZWxmWy8qIHN0YXRlICovMV1bLyogb3B0aW9ucyAqLzJdLmxlbmd0aCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW46IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm51bWJlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGdldElucHV0VmFsdWUoc2VsZlsvKiBzdGF0ZSAqLzFdWy8qIGlucHV0cyAqLzBdLCAvKiBtYXhOdW1DaG9pY2VzICovNzgxOTg4MDApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U6IChmdW5jdGlvbiAocGFyYW0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gb25JbnB1dENoYW5nZShzZWxmLCAvKiBtYXhOdW1DaG9pY2VzICovNzgxOTg4MDAsIHBhcmFtKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB1bmRlZmluZWQsIFwiT3BlbiB0aW1lXCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRhdGV0aW1lLWxvY2FsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZ2V0SW5wdXRWYWx1ZShzZWxmWy8qIHN0YXRlICovMV1bLyogaW5wdXRzICovMF0sIC8qIG9wZW5UaW1lICovLTI5ODI3NjYxNyksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogKGZ1bmN0aW9uIChwYXJhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvbklucHV0Q2hhbmdlKHNlbGYsIC8qIG9wZW5UaW1lICovLTI5ODI3NjYxNywgcGFyYW0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHVuZGVmaW5lZCwgXCJDbG9zZSB0aW1lXCIsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcImRhdGV0aW1lLWxvY2FsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZ2V0SW5wdXRWYWx1ZShzZWxmWy8qIHN0YXRlICovMV1bLyogaW5wdXRzICovMF0sIC8qIGNsb3NlVGltZSAqLzM4MjQyMTk4OSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogKGZ1bmN0aW9uIChwYXJhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvbklucHV0Q2hhbmdlKHNlbGYsIC8qIGNsb3NlVGltZSAqLzM4MjQyMTk4OSwgcGFyYW0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHVuZGVmaW5lZCwgXCJXaGl0ZWxpc3RcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdHRlcm46IFwiKFtcXFxcdytdezEsMTJ9KFxcXFwuXFxcXHcrKT8pKCxcXFxccyooW1xcXFx3K117MSwxMn0oXFxcXC5cXFxcdyspPykpKlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiYWxpY2UsIGJvYiwgamFuaWNlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZ2V0SW5wdXRWYWx1ZShzZWxmWy8qIHN0YXRlICovMV1bLyogaW5wdXRzICovMF0sIC8qIHdoaXRlbGlzdCAqLzY5NzY1OTI3MSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogKGZ1bmN0aW9uIChwYXJhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvbklucHV0Q2hhbmdlKHNlbGYsIC8qIHdoaXRlbGlzdCAqLzY5NzY1OTI3MSwgcGFyYW0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImxhYmVsXCIsIHVuZGVmaW5lZCwgXCJCbGFja2xpc3RcIiwgUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhdHRlcm46IFwiKFtcXFxcdytdezEsMTJ9KFxcXFwuXFxcXHcrKT8pKCxcXFxccyooW1xcXFx3K117MSwxMn0oXFxcXC5cXFxcdyspPykpKlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IFwiY2Fyb2wsIGppbSwgZGFuXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZ2V0SW5wdXRWYWx1ZShzZWxmWy8qIHN0YXRlICovMV1bLyogaW5wdXRzICovMF0sIC8qIGJsYWNrbGlzdCAqLzQ3MzcwOTk4MSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNoYW5nZTogKGZ1bmN0aW9uIChwYXJhbSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvbklucHV0Q2hhbmdlKHNlbGYsIC8qIGJsYWNrbGlzdCAqLzQ3MzcwOTk4MSwgcGFyYW0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pKSkgOiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHVuZGVmaW5lZCkpLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInJlc2V0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgXCJSZXNldFwiKSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IGNvbnRleHRbLyogc2NhdHRlciAqLzBdID09PSAvKiBOb25lICovMCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInN1Ym1pdFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIFwiQ3JlYXRlIFBvbGxcIikpLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYXNpZGVcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBUeXBlZEdsYW1vci50b1N0cmluZyhIb21lUGFnZVN0eWxlcyRSZWFjdFRlbXBsYXRlLnNpZGViYXIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lOiBUeXBlZEdsYW1vci50b1N0cmluZyhIb21lUGFnZVN0eWxlcyRSZWFjdFRlbXBsYXRlLnBvbGwpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogVHlwZWRHbGFtb3IudG9TdHJpbmcoSG9tZVBhZ2VTdHlsZXMkUmVhY3RUZW1wbGF0ZS5wb2xsVGl0bGUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBcIlBvcHVsYXIgUG9sbHNcIiksIHRtcCksIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgdW5kZWZpbmVkLCBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDJcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU6IFR5cGVkR2xhbW9yLnRvU3RyaW5nKEhvbWVQYWdlU3R5bGVzJFJlYWN0VGVtcGxhdGUucG9sbFRpdGxlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSwgXCJSZWNlbnQgUG9sbHNcIiksIHRtcCQxKSwgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB1bmRlZmluZWQsIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMlwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogVHlwZWRHbGFtb3IudG9TdHJpbmcoSG9tZVBhZ2VTdHlsZXMkUmVhY3RUZW1wbGF0ZS5wb2xsVGl0bGUpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LCBcIlJlY2VudCBWb3Rlc1wiKSwgdG1wJDIpKSk7XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAvKiBpbml0aWFsU3RhdGUgKi8oZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICByZXR1cm4gLyogcmVjb3JkICovW1xuICAgICAgICAgICAgICAgICAgICAgIC8qIGlucHV0cyA6IHJlY29yZCAqL1tcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qIHRpdGxlICovXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIC8qIG1pbk51bUNob2ljZXMgKi8xLFxuICAgICAgICAgICAgICAgICAgICAgICAgLyogbWF4TnVtQ2hvaWNlcyAqLzEsXG4gICAgICAgICAgICAgICAgICAgICAgICAvKiBvcGVuVGltZSA6IE5vbmUgKi8wLFxuICAgICAgICAgICAgICAgICAgICAgICAgLyogY2xvc2VUaW1lIDogTm9uZSAqLzAsXG4gICAgICAgICAgICAgICAgICAgICAgICAvKiB3aGl0ZWxpc3QgOiBhcnJheSAqL1tdLFxuICAgICAgICAgICAgICAgICAgICAgICAgLyogYmxhY2tsaXN0IDogYXJyYXkgKi9bXVxuICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgLyogaW5wdXRFcnJvcnMgKi97IH0sXG4gICAgICAgICAgICAgICAgICAgICAgLyogb3B0aW9ucyA6IGFycmF5ICovW1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgIC8qIG9wdGlvbkVycm9ycyA6IGFycmF5ICovW10sXG4gICAgICAgICAgICAgICAgICAgICAgLyogc2hvd0FkdmFuY2VkICovZmFsc2UsXG4gICAgICAgICAgICAgICAgICAgICAgLyogcmVjZW50UG9sbHMgOiBOb3RBc2tlZCAqLzAsXG4gICAgICAgICAgICAgICAgICAgICAgLyogcG9wdWxhclBvbGxzIDogTm90QXNrZWQgKi8wLFxuICAgICAgICAgICAgICAgICAgICAgIC8qIHJlY2VudFZvdGVzIDogTm90QXNrZWQgKi8wXG4gICAgICAgICAgICAgICAgICAgIF07XG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAvKiByZXRhaW5lZFByb3BzICovY29tcG9uZW50Wy8qIHJldGFpbmVkUHJvcHMgKi8xMV0sXG4gICAgICAgICAgLyogcmVkdWNlciAqL3JlZHVjZXIsXG4gICAgICAgICAgLyogc3Vic2NyaXB0aW9ucyAqL2NvbXBvbmVudFsvKiBzdWJzY3JpcHRpb25zICovMTNdLFxuICAgICAgICAgIC8qIGpzRWxlbWVudFdyYXBwZWQgKi9jb21wb25lbnRbLyoganNFbGVtZW50V3JhcHBlZCAqLzE0XVxuICAgICAgICBdO1xufVxuXG52YXIgSWQgPSBCZWx0LklkO1xuXG52YXIgJCRBcnJheSA9IEJlbHQuJCRBcnJheTtcblxudmFyIFNvcnRBcnJheSA9IEJlbHQuU29ydEFycmF5O1xuXG52YXIgTXV0YWJsZVF1ZXVlID0gQmVsdC5NdXRhYmxlUXVldWU7XG5cbnZhciBNdXRhYmxlU3RhY2sgPSBCZWx0Lk11dGFibGVTdGFjaztcblxudmFyIExpc3QgPSBCZWx0Lkxpc3Q7XG5cbnZhciBSYW5nZSA9IEJlbHQuUmFuZ2U7XG5cbnZhciAkJFNldCA9IEJlbHQuJCRTZXQ7XG5cbnZhciAkJE1hcCA9IEJlbHQuJCRNYXA7XG5cbnZhciBNdXRhYmxlU2V0ID0gQmVsdC5NdXRhYmxlU2V0O1xuXG52YXIgTXV0YWJsZU1hcCA9IEJlbHQuTXV0YWJsZU1hcDtcblxudmFyIEhhc2hTZXQgPSBCZWx0Lkhhc2hTZXQ7XG5cbnZhciBIYXNoTWFwID0gQmVsdC5IYXNoTWFwO1xuXG52YXIgT3B0aW9uID0gQmVsdC5PcHRpb247XG5cbnZhciBSZXN1bHQgPSBCZWx0LlJlc3VsdDtcblxudmFyIERlYnVnID0gQmVsdC5EZWJ1ZztcblxudmFyIFN0eWxlcyA9IDA7XG5cbmV4cG9ydHMuSWQgPSBJZDtcbmV4cG9ydHMuJCRBcnJheSA9ICQkQXJyYXk7XG5leHBvcnRzLlNvcnRBcnJheSA9IFNvcnRBcnJheTtcbmV4cG9ydHMuTXV0YWJsZVF1ZXVlID0gTXV0YWJsZVF1ZXVlO1xuZXhwb3J0cy5NdXRhYmxlU3RhY2sgPSBNdXRhYmxlU3RhY2s7XG5leHBvcnRzLkxpc3QgPSBMaXN0O1xuZXhwb3J0cy5SYW5nZSA9IFJhbmdlO1xuZXhwb3J0cy4kJFNldCA9ICQkU2V0O1xuZXhwb3J0cy4kJE1hcCA9ICQkTWFwO1xuZXhwb3J0cy5NdXRhYmxlU2V0ID0gTXV0YWJsZVNldDtcbmV4cG9ydHMuTXV0YWJsZU1hcCA9IE11dGFibGVNYXA7XG5leHBvcnRzLkhhc2hTZXQgPSBIYXNoU2V0O1xuZXhwb3J0cy5IYXNoTWFwID0gSGFzaE1hcDtcbmV4cG9ydHMuT3B0aW9uID0gT3B0aW9uO1xuZXhwb3J0cy5SZXN1bHQgPSBSZXN1bHQ7XG5leHBvcnRzLkRlYnVnID0gRGVidWc7XG5leHBvcnRzLlN0eWxlcyA9IFN0eWxlcztcbmV4cG9ydHMubmFtZVRvU3RyaW5nID0gbmFtZVRvU3RyaW5nO1xuZXhwb3J0cy5zZXRUaXRsZSA9IHNldFRpdGxlO1xuZXhwb3J0cy5nZXRUaXRsZSA9IGdldFRpdGxlO1xuZXhwb3J0cy5zZXRNaW5OdW1DaG9pY2VzID0gc2V0TWluTnVtQ2hvaWNlcztcbmV4cG9ydHMuZ2V0TWluTnVtQ2hvaWNlcyA9IGdldE1pbk51bUNob2ljZXM7XG5leHBvcnRzLnNldE1heE51bUNob2ljZXMgPSBzZXRNYXhOdW1DaG9pY2VzO1xuZXhwb3J0cy5nZXRNYXhOdW1DaG9pY2VzID0gZ2V0TWF4TnVtQ2hvaWNlcztcbmV4cG9ydHMuc2V0T3BlblRpbWUgPSBzZXRPcGVuVGltZTtcbmV4cG9ydHMuZ2V0T3BlblRpbWUgPSBnZXRPcGVuVGltZTtcbmV4cG9ydHMuc2V0Q2xvc2VUaW1lID0gc2V0Q2xvc2VUaW1lO1xuZXhwb3J0cy5nZXRDbG9zZVRpbWUgPSBnZXRDbG9zZVRpbWU7XG5leHBvcnRzLnNldFdoaXRlbGlzdCA9IHNldFdoaXRlbGlzdDtcbmV4cG9ydHMuZ2V0V2hpdGVsaXN0ID0gZ2V0V2hpdGVsaXN0O1xuZXhwb3J0cy5zZXRCbGFja2xpc3QgPSBzZXRCbGFja2xpc3Q7XG5leHBvcnRzLmdldEJsYWNrbGlzdCA9IGdldEJsYWNrbGlzdDtcbmV4cG9ydHMuZ2V0SW5wdXRWYWx1ZSA9IGdldElucHV0VmFsdWU7XG5leHBvcnRzLnNldElucHV0VmFsdWUgPSBzZXRJbnB1dFZhbHVlO1xuZXhwb3J0cy5yZWR1Y2VyID0gcmVkdWNlcjtcbmV4cG9ydHMub25JbnB1dENoYW5nZSA9IG9uSW5wdXRDaGFuZ2U7XG5leHBvcnRzLmNvbXBvbmVudCA9IGNvbXBvbmVudDtcbmV4cG9ydHMuZW9zID0gZW9zO1xuZXhwb3J0cy5tYWtlID0gbWFrZTtcbi8qIGNvbXBvbmVudCBOb3QgYSBwdXJlIG1vZHVsZSAqL1xuIl0sInNvdXJjZVJvb3QiOiIifQ==